services:
    oro_authorize_net.method_view_factory:
        class: 'Oro\Bundle\AuthorizeNetBundle\Tests\Behat\Mock\Method\View\Factory\AuthorizeNetPaymentMethodViewFactoryMock'
        arguments:
            - '@form.factory'
            - '@oro_security.token_accessor'

    oro_authorize_net.echeck.method_view_factory:
        class: 'Oro\Bundle\AuthorizeNetBundle\Tests\Behat\Mock\Method\View\Factory\AuthorizeNetEcheckPaymentMethodViewFactoryMock'
        parent: oro_authorize_net.abstract.method_view_factory

    oro_authorize_net.authorize_net.client.factory.anet_sdk_request_factory:
        class: 'Oro\Bundle\AuthorizeNetBundle\Tests\Behat\Mock\AuthorizeNet\Client\Factory\AnetSDKRequestFactoryMock'
        public: false
        arguments:
            - !tagged_iterator oro_authorize_net.authorize_net.client.request_configurator
        calls:
            - [ setPaymentProfileIdsStorage, [ '@oro_authorize_net.mock.remote.storage.payment_profile_ids' ] ]
            - [ setPaymentProfileTypesToIDsStorage, ['@oro_authorize_net.mock.remote.storage.payment_profile_types_to_ids']]

    oro_authorize_net.method.factory:
        class: 'Oro\Bundle\AuthorizeNetBundle\Tests\Behat\Mock\Method\Factory\AuthorizeNetPaymentMethodFactoryMock'
        public: false
        arguments:
            - '@oro_authorize_net.authorize_net.gateway'
            - '@request_stack'
            - '@oro_authorize_net.method.option.resolver'
            - '@event_dispatcher'
        calls:
            - [ setLogger, [ '@logger' ] ]
        tags:
            - { name: monolog.logger, channel: oro_authorize_net }

    oro_authorize_net.layout.data_provider.payment_profile_dto_form:
        class: 'Oro\Bundle\AuthorizeNetBundle\Tests\Behat\Mock\Layout\DataProvider\PaymentProfileDTOFormProvider'
        arguments:
            - '@form.factory'
            - '@router'
            - '@oro_authorize_net.provider.cim_enabled_integration_config'
        tags:
            - { name: layout.data_provider, alias: oro_authorize_net_payment_profile_dto_form }

    oro_authorize_net.cache.mock.customer_payment_profiles:
        parent: oro.cache.abstract
        calls:
            - [ setNamespace, [ 'oro_au_net_mock_customer_payment_profiles' ] ]

    oro_authorize_net.mock.remote.storage.payment_profile_ids:
        class: 'Oro\Bundle\AuthorizeNetBundle\Tests\Behat\Mock\Remote\Storage\PaymentProfileIDs'
        public: true
        arguments:
            - '@oro_authorize_net.cache.mock.customer_payment_profiles'

    oro_authorize_net.mock.remote.storage.payment_profile_types_to_ids:
        class: 'Oro\Bundle\AuthorizeNetBundle\Tests\Behat\Mock\Remote\Storage\PaymentProfileTypesToIDs'
        arguments:
            - '@oro_authorize_net.cache.mock.customer_payment_profiles'
